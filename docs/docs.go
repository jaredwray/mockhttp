// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/anything": {
            "get": {
                "description": "Returns the method, headers, query parameters, and URL of the request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anything"
                ],
                "summary": "Echo request information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/delay/{seconds}": {
            "get": {
                "description": "Returns a response after a specified delay in seconds",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "delay"
                ],
                "summary": "Delayed response",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delay in seconds",
                        "name": "seconds",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response after {seconds} second(s)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid delay time",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/get": {
            "get": {
                "description": "Returns the query parameters, headers, and URL of the request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "get"
                ],
                "summary": "Get request information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/headers": {
            "get": {
                "description": "Returns the headers of the request",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "headers"
                ],
                "summary": "Get request headers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ip": {
            "get": {
                "description": "Returns the IP address of the requester",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ip"
                ],
                "summary": "Get requester's IP address",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/json": {
            "get": {
                "description": "Returns a sample JSON payload",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "json"
                ],
                "summary": "Get a sample JSON response",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/post": {
            "post": {
                "description": "Returns the posted data, headers, and URL of the request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "post"
                ],
                "summary": "Post request information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/status/{code}": {
            "get": {
                "description": "Returns a response with the specified status code",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Return custom status code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Status code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid status code",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MockHTTP API",
	Description:      "This is a mock HTTP server inspired by httpbin, built with Go and Gorilla Mux.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
